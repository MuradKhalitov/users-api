spring:
  application:
    name: user-api

---
spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: jdbc:postgresql://localhost:5432/user_db
    username: postgres
    password: postgres
    hikari:
      schema: user_schema
      connection-init-sql: create schema if not exists user_schema
      connection-timeout: 10000

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        default_schema: user_schema
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.xml
    default-schema: user_schema
    liquibase-schema: public
    user: postgres
    password: postgres

  cache:
    type: redis
    redis:
      time-to-live: 600000

  data:
    redis:
      host: localhost
      port: 6379

server:
  error:
    include-message: always

---
spring:
  config:
    activate:
      on-profile: docker

  datasource:
    url: jdbc:postgresql://user-db:5432/user_db
    username: postgres
    password: postgres
    hikari:
      schema: user_schema
      connection-init-sql: create schema if not exists user_schema
      connection-timeout: 10000

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        default_schema: user_schema
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.xml
    default-schema: user_schema
    liquibase-schema: public
    user: postgres
    password: postgres

  cache:
    type: redis
    redis:
      time-to-live: 600000

  data:
    redis:
      host: redis
      port: 6379

server:
  error:
    include-message: always
